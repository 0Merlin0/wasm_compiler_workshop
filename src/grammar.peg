start =
    _ r:return? _ {
        let statements = [];
        if (r) {
            statements.push(r);
        }
        return { type: 'program',
            children: statements }
    }

return =
    "return" v:sum ";" {
        return { type: 'return',
            child: v }
    }

sum =
    first:product rest:( _ ("+" / "-") _ product)* {
        return { type: 'sum',
            child: first,
            children: rest }
    }

product =
    first:factor rest:( _ ("/" / "*") _ factor)* {
        return { type: 'product',
            child: first,
            children: rest }
    }

factor =
    _ "(" _ s:sum _ ")" _ { return s; }
    / v:value { return v; }

value =
    v:number { return v; }

number =
    _ digits:[0-9]+ _ {
        return { type: 'number',
            value: parseInt(digits.join(""), 10) }
    }

_ "whitespace" =
    [ \t\n]*
